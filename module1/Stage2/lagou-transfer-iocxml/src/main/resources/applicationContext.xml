<?xml version="1.0" encoding="UTF-8"?>
<!--跟标签beans，里面配置一个又一个的bean子标签，每一个bean子标签都代表一个类的配置-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
">

    <!--id标识对象，class是类的全限定类名-->
    <!--    <bean id="accountDao" class="com.lagou.edu.dao.impl.JdbcTemplateDaoImpl">-->
    <bean id="accountDao" class="com.lagou.edu.dao.impl.JdbcAccountDaoImpl">
        <property name="ConnectionUtils" ref="connectionUtils"/>
        <!--  set注入用property标签，如果注入的是另外一个bean那么使用ref，如果注入的是普通值，那么使用的是value-->
        <property name="name" value="zhangsan"/>
        <property name="sex" value="1"/>
        <property name="money" value="100.3"/>

    </bean>
    <bean id="transferService" class="com.lagou.edu.service.impl.TransferServiceImpl">
        <!--set+ name 之后锁定到传值的set方法了，通过反射技术可以调用该方法传入对应的值-->
        <property name="AccountDao" ref="accountDao"></property>
    </bean>


    <!--配置新增的三个Bean-->
    <bean id="connectionUtils" class="com.lagou.edu.utils.ConnectionUtils"></bean>

    <!--事务管理器-->
    <bean id="transactionManager" class="com.lagou.edu.utils.TransactionManager">
        <property name="ConnectionUtils" ref="connectionUtils"/>
    </bean>

    <!--代理对象工厂-->
    <bean id="proxyFactory" class="com.lagou.edu.factory.ProxyFactory">
        <property name="TransactionManager" ref="transactionManager"/>
    </bean>
    <!--  Spring IOC实例化Bean的三种方式  -->
    <!-- 方式一：使用无参构造器   -->
<!--    <bean id="connectionUtils" class="com.lagou.edu.utils.ConnectionUtils"></bean>-->

    <!-- 另外两种方式是为了我们自己new的对象加入到SpringIOC容器中-->
    <!-- 方拾二：静态方法  通过class锁定静态方法存在类的同时通过method锁定静态方法 -->
<!--    <bean id="connectionUtils" class="com.lagou.edu.factory.CreateBeanFactory" factory-method="getInstanceStatic"></bean>-->

    <!-- 方法三：实例化方法 -->
<!--    <bean id="createBeanFactory" class="com.lagou.edu.factory.CreateBeanFactory"></bean>-->
<!--    <bean id="connectionUtils" factory-bean="createBeanFactory"></bean>-->
</beans>